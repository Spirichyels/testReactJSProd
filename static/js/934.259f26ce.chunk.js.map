{"version":3,"file":"static/js/934.259f26ce.chunk.js","mappings":"mJACA,QAAyB,wBAAzB,EAA+D,6BAA/D,EAAqG,wBAArG,EAA2K,0B,aCE3K,MAIA,EAJiBA,IACRC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,SAAEJ,EAAMK,U,cCA1C,MAUA,EAVoBL,IAClB,IAAIM,EAAO,YAAcN,EAAMO,GAE/B,OACEN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAW,IAAMA,EAASC,UACxCH,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,GAAIH,EAAKF,SAAEJ,EAAMU,QACtB,E,sDCNV,MAAMC,GAAcC,EAAAA,EAAAA,GAAkB,IAmBtC,GAAeC,EAAAA,EAAAA,GAAU,CACvBC,KAAM,wBADR,EAlByBd,IAErBC,EAAAA,EAAAA,KAAA,QAAMc,SAAUf,EAAMgB,aAAaZ,UACjCa,EAAAA,EAAAA,MAAA,OAAAb,SAAA,EACEH,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACJC,SAAU,CAACC,EAAAA,EAAST,GACpBU,UAAWC,EAAAA,GACXZ,KAAK,iBACLa,YAAY,wBAGdtB,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,kBCiBlB,EA3BiBJ,IACf,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAKC,IACvC5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACpB,KAAMmB,EAAEnB,KAAiBH,GAAIsB,EAAEtB,IAAZsB,EAAEtB,MAE/BwB,EAAmBP,EAAMQ,SAASJ,KAAKK,IACzChC,EAAAA,EAAAA,KAACiC,EAAO,CAAC7B,QAAS4B,EAAE5B,QAAoBE,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,MAOtC,OAAKP,EAAMmC,QAGTlB,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAASC,SAAA,EACvBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,SAAEsB,KAChCzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACzBH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2B,OAER9B,EAAAA,EAAAA,KAACmC,EAAe,CAACrB,SAZAsB,IACnBrC,EAAMsC,YAAYD,EAAOE,eAAe,QAGhBtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAAC/B,GAAI,UAShC,E,sBCTV,SAAegC,E,QAAAA,KACbC,EAAAA,EAAAA,KAfqBlB,IACd,CACLC,YAAaD,EAAMC,gBAIGkB,IACjB,CACLL,YAAcC,IACZI,GAASC,EAAAA,EAAAA,GAAmBL,GAAgB,MAOhDM,EAAAA,EAFF,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForms.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialogs_dialog__1ZIK1\",\"dialogItems\":\"Dialogs_dialogItems__WzG6z\",\"active\":\"Dialogs_active__xCo3G\",\"message\":\"Dialogs_message__wyVbS\",\"messages\":\"Dialogs_messages__BI8IW\"};","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { maxLentgthCreator, requred } from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLentgthCreator(50);\r\nconst AddMessageForms = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[requred, maxLength50]}\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n\r\n        <div>\r\n          <button>Send</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForms);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport AddMessageForms from \"./AddMessageForms\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} id={m.id}></Message>\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialog}>\r\n      <div className={s.dialogItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageForms onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","_jsx","className","s","children","message","path","id","NavLink","to","name","maxLength50","maxLentgthCreator","reduxForm","form","onSubmit","handleSubmit","_jsxs","Field","validate","requred","component","Textarea","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","AddMessageForms","values","sendMessage","newMessageBody","Redirect","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}